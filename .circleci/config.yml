version: 2.1

jobs:
  build_ios:
    macos:
      xcode: 13.1.0
    working_directory: ~/galoy-mobile
    environment:
      FL_OUTPUT_DIR: output
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout:
          path: ~/galoy-mobile
      - add_ssh_keys:
          fingerprints:
            - "19:7e:f3:6c:be:a7:17:01:7d:09:ca:39:c3:98:86:90"
      - restore_cache:
          key: 1-gem-{{ checksum "ios/Gemfile.lock" }}
      - run: cd ios && bundle config set deployment 'true'
      - run: cd ios && bundle check || bundle install
      - save_cache:
          key: 1-gem-{{ checksum "ios/Gemfile.lock" }}
          paths:
            - ios/vendor
      - restore_cache:
          key: 1-yarn-{{ checksum "yarn.lock" }}-pod1-{{ checksum "ios/Podfile.lock" }}
      - run: yarn install
      # - run: git diff "ios/Podfile.lock" | cat
      - save_cache:
          key: 1-yarn-{{ checksum "yarn.lock" }}-pod1-{{ checksum "ios/Podfile.lock" }}
          paths:
            - node_modules
            - ios/Pods
      - run: yarn jest
      - run: sed -i'' -e "s/GOOGLE_SERVICE_FIREBASE_API_KEY/$GOOGLE_SERVICE_FIREBASE_API_KEY/" ios/GoogleService-Info.plist
      - run:
          name: fastlane
          command: cd ios && bundle exec fastlane beta
          no_output_timeout: 15m

      - persist_to_workspace:
          root: .
          paths:
            - ios/*

      - store_artifacts:
          path: ios/output
      - store_test_results:
          path: ios/output/scan

  build_android:
    docker:
      - image: circleci/android:api-30
    resource_class: large
    environment:
      TERM: dumb
      JAVA_OPTS: -Xms512m -Xmx2g
      GRADLE_OPTS: -Xmx3g -Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-Xmx2g -XX:+HeapDumpOnOutOfMemoryError"
    working_directory: ~/galoy-mobile
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout:
          path: ~/galoy-mobile
      - run: sudo apt-get update
      - run: sudo apt-get install gnupg2
      - run: curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -
      - run: sudo apt-get install -y nodejs
      - run: sudo apt-get install gcc g++ make
      - run: sudo npm install -g yarn
      - run: gpg --keyserver keyserver.ubuntu.com --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
      - run: curl -sL https://get.rvm.io | bash -s stable --ruby
      - run: source /home/circleci/.rvm/scripts/rvm
      - run: rvm install 2.5
      - run: rvm use 2.5 --default
      - run: gem install fastlane -NV

      - run: cd android && bundle config set deployment 'true'
      - run: cd android && bundle check || bundle install

      - run: echo $ANDROID_SERVICE_ACCOUNT_UPLOAD | base64 -d > android/api-8350101450647692243-59029-b9bec84a7e5a.json
      - run: echo $RELEASE_KEYSTORE | base64 -d > android/release.keystore
      - run: echo $RELEASE_KEYSTORE | base64 -d > android/app/release.keystore

      - run: node -v
      - run: npm -v
      - run: ruby -v
      - run: fastlane -v
      - run: yarn -v

      - run: yarn install
      - run: yarn jest
      - run: echo $JAVA_OPTS
      - run: echo $GRADLE_OPTS
      - run: cd android && fastlane android beta

      - persist_to_workspace:
          root: .
          paths:
            - android/*

  update_locale:
    working_directory: ~/galoy-mobile
    docker:
      - image: cimg/base:2020.01
    resource_class: small
    steps:
      - checkout:
          path: ~/galoy-mobile
      - run: sed -i "s/__TOKEN__/$PHRASE_TOKEN/" .phrase.yml
      - run: wget https://github.com/phrase/phrase-cli/releases/download/2.0.13/phrase_linux_amd64
      - run: chmod +x ./phrase_linux_amd64
      - run: ./phrase_linux_amd64 push
      - run: ./phrase_linux_amd64 pull
      - run: git config credential.helper 'cache --timeout=120'
      - run: git config --global user.name "circleci-bot"
      - run: git config --global user.email "bot@circleci.com"
      - run: git config pull.rebase false
      - run: |
          if [[ $(-- . ':!.phrase.yml') ]]; then
            git commit -a -m "update translation file [ci skip]" -- . ':!.phrase.yml'
            git push -q https://${GITHUB_TOKEN}@github.com/GaloyMoney/galoy-mobile.git $CIRCLE_BRANCH
          else
            echo "nothing to commit"
          fi

  release:
    working_directory: ~/galoy-mobile
    docker:
      - image: cimg/base:2022.02-20.04
    resource_class: small
    steps:
      - checkout:
          path: ~/galoy-mobile
      - attach_workspace:
          at: /tmp/workspace
      - run: cp -r /tmp/workspace/android .
      - run: cp -r /tmp/workspace/ios .

      # Run Git Configuration
      - run: git config credential.helper 'cache --timeout=120'
      - run: git config --global user.name "circleci-bot"
      - run: git config --global user.email "bot@circleci.com"
      - run: git config pull.rebase false

      # Commit the change
      - run: git add --force android/app/build/generated/sourcemaps/react/release
      - run: "git commit -a -m \"ci: new build\""
      - run: git push -q https://${GITHUB_TOKEN}@github.com/GaloyMoney/galoy-mobile.git $CIRCLE_BRANCH

workflows:
  mobile:
    jobs:
      - hold_build_mobile:
          type: approval
          filters:
            tags:
              only: /^(?!v).*/
            branches:
              ignore: /.*/
      - update_locale:
          requires:
            - hold_build_mobile
          filters:
            tags:
              only: /^(?!v).*/
            branches:
              ignore: /.*/
      - build_ios:
          requires:
            - update_locale
          filters:
            tags:
              only: /^(?!v).*/
            branches:
              ignore: /.*/
      - build_android:
          requires:
            - update_locale
          filters:
            tags:
              only: /^(?!v).*/
            branches:
              ignore: /.*/
      - release:
          requires:
            - build_ios
            - build_android
          filters:
            tags:
              only: /^(?!v).*/
            branches:
              ignore: /.*/
